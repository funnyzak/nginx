name: Nginx Version Check and Docker Image Build
on:
  schedule:
    - cron: '0 0 * * *' # run every day at midnight
env:
  IMAGE_REPOSITORY: funnyzak/nginx

jobs:
  nginx-latest:
    name: Nginx Version Check and Docker Image Build
    runs-on: ubuntu-latest
    steps:
      - name: Check latest Nginx version
        run: |
          curl -s https://nginx.org/en/download.html | grep -o 'nginx-[0-9.]\+.tar.gz' | head -1 | sed 's/nginx-//' | sed 's/.tar.gz//' > version.txt
      - name: Check latest image version
        run: |
          curl -s https://hub.docker.com/v2/repositories/funnyzak/nginx/tags | jq -r '.results[].name' | sort -V | tail -1 > image_version.txt
      - name: Compare version
        run: |
          if [ $(cat version.txt) == $(cat image_version.txt) ]; then
            echo "No new version, exit"
            exit 0
          fi

  docker-release:
    name: Publish Docker images
    needs: [nginx-latest]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set variables
        run: |
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV    
      - name: Get version from nginx official
        if: ${{ env.VERSION == '' || env.VERSION == 'latest' }}
        run: |
          echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
      - name: Print variables
        run: |
          echo "VERSION=${{ env.VERSION }}"
          echo "BUILD_DATE=${{ env.BUILD_DATE }}"
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            VERSION=${{ env.VERSION }}
          push: true
          tags: |
            ${{ env.IMAGE_REPOSITORY }}:${{ env.VERSION }}
            ${{ env.IMAGE_REPOSITORY }}:latest
          platforms: |
            linux/amd64
      - name: Commit tag and push
        if: ${{ env.VERSION != 'latest' }}
        run: |
          git config --global user.name "Leon"
          git config --global user.email "${{ secrets.GITHUB_EMAIL }}"
          git tag -f -a ${{ env.VERSION }} -m "Release ${{ env.VERSION }}"
          git push origin ${{ env.VERSION }}
  push-message:
      name: Push message
      runs-on: ubuntu-latest
      needs: [docker-release]
      steps:
        - name: Push message
          uses: funnyzak/pushoo-action@main
          with:
            platforms: ifttt,wecombot,bark
            tokens: ${{ secrets.PUSH_TOKEN }}
            content: |
              # ${{ github.event.repository.name }} Docker Build Success
              ## trigger: ${{ github.event_name }} at ${{ github.event.head_commit.timestamp }}
              ## commit message: ${{ github.event.head_commit.message }}
              ## commit url: ${{ github.event.head_commit.url }}
              ## commit author: ${{ github.event.head_commit.author.name }}
              ## commit email: ${{ github.event.head_commit.author.email }}
              ## commit id: ${{ github.event.head_commit.id }}
            title: |
              ${{ github.repository }} ${{ github.event_name }} Message
            options: '{"bark": { "url": "https://github.com/${{github.repository}}" }}'
            debug: false
